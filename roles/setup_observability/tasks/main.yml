---
- name: Check if docker is started
  ansible.builtin.systemd_service:
    name: docker
    state: started
  become: true

- name: Install a Loki login plugin
  community.docker.docker_plugin:
    plugin_name: 'grafana/loki-docker-driver:{{ obs_loki_driver_version }}'
    alias: loki
    state: enable
  become: true

- name: Configure docker logs and metrics
  block:
    - name: Create adjustment json for docker daemon.json
      block:
        - name: Create temp json from the template
          ansible.builtin.template:
            src: docker-daemon-amend.json.j2
            dest: /tmp/docker-daemon-amend.json
            mode: '0644'

        - name: Read from the json
          ansible.builtin.slurp:
            src: /tmp/docker-daemon-amend.json
          register: obs_tmp_daemon_amend_raw

        - name: Load the json into variable
          ansible.builtin.set_fact:
            obs_tmp_daemon_amend: '{{ obs_tmp_daemon_amend_raw.content | b64decode }}'

    - name: Load current 'daemon.json' file
      ansible.builtin.slurp:
        path: /etc/docker/daemon.json
      register: obs_tmp_daemon_raw

    - name: Set json into variable
      ansible.builtin.set_fact:
        obs_tmp_daemon_json: '{{ obs_tmp_daemon_raw.content | b64decode }}'

    - name: Print content of the json
      ansible.builtin.debug:
        var: obs_tmp_daemon_json

    - name: Adjust the daemon config
      ansible.builtin.set_fact:
        obs_tmp_daemon_merged: '{{ obs_tmp_daemon_json | combine(obs_tmp_daemon_amend) }}'

    - name: Print content of the updated file
      ansible.builtin.debug:
        msg: 'Resut is {{ obs_tmp_daemon_merged | to_json }}'

    - name: Write updated config
      ansible.builtin.copy:
        content: '{{ obs_tmp_daemon_merged }}'
        dest: /etc/docker/daemon.json
        force: true
        mode: '0644'
        owner: root
        group: root
      become: true
      notify:
        - Restart dockerd

    - name: Flush handlers
      ansible.builtin.meta: flush_handlers

- name: Create Prometheus config
  block:
    - name: Create conf directory
      ansible.builtin.file:
        path: '{{ obs_apps_data_path }}/observability/prometheus/config'
        state: directory
        mode: '0644'
        owner: '{{ obs_app_user.user }}'
        group: '{{ obs_app_user.group }}'
        recurse: true
      become: true

    - name: Copy config file
      ansible.builtin.template:
        src: prometheus.yml.j2
        dest: '{{ obs_apps_data_path }}/observability/prometheus/config/prometheus.yml'
        owner: '{{ obs_app_user.user }}'
        group: '{{ obs_app_user.group }}'
        mode: '0644'
      become: true

- name: Create Loki config
  block:
    - name: Create conf directory
      ansible.builtin.file:
        path: '{{ obs_apps_data_path }}/observability/loki/config'
        state: directory
        mode: '0644'
        owner: '{{ obs_app_user.user }}'
        group: '{{ obs_app_user.group }}'
        recurse: true
      become: true

    - name: Copy config file
      ansible.builtin.copy:
        src: loki-config.yaml
        dest: '{{ obs_apps_data_path }}/observability/loki/config/loki-config.yaml'
        mode: '0644'
        owner: '{{ obs_app_user.user }}'
        group: '{{ obs_app_user.group }}'
      become: true

- name: Start 'Grafana + Prometheus + Loki + cAdvisor'
  ansible.builtin.import_tasks: tasks/compose_up.yml
  vars:
    t_app_data: '{{ obs_apps_data_path }}/observability'
    t_app_user: '{{ obs_app_user.user }}'
    t_app_group: '{{ obs_app_user.group }}'
    t_app_data_dirs:
      - '{{ obs_apps_data_path }}/observability/grafana/data'
      - '{{ obs_apps_data_path }}/observability/loki/config'
      - '{{ obs_apps_data_path }}/observability/loki/data'
      - '{{ obs_apps_data_path }}/observability/prometheus/config'

alias ll='ls -lah'
alias sll='sudo ls -lah'

alias bat='batcat --wrap=never'
alias sbat='sudo batcat --wrap=never'

alias docker-start='sudo systemctl start docker'
alias docker-stop='sudo systemctl stop docker'
alias docker-restart='sudo systemctl restart docker'
alias docker-status='sudo systemctl status docker'

alias d-container-restart='docker container restart'

alias dcu='docker compose up -d'
alias dcd='docker compose down'

alias d-ps='docker ps | bat'
alias d-logs='docker logs | bat'
alias d-logs-f='docker logs -f'

function d-logs() {
  docker logs $1 | bat
}

function d-sh() {
  docker exec -it $1 sh
}

function d-bash() {
  docker exec -it $1 bash
}

function d-envs() {
  docker exec $1 env
}

function d-set-env() {
  docker exec -i $1 /bin/bash -c "export $2 $3"
}

function cd-apps() {
  cd {{ p_dirs.apps_data }}/$1
}

function cd-compose() {
  cd {{ p_dirs.compose_files }}/$1
}

function d-db-dump() {
  local dumps_root='{{ p_dirs.backups_root }}/db_dumps'

  local app_name=$1
  local container_name=$2
  local timestamp=$(date +%Y-%m-%d_%H-%M-%S)

    echo "Running 'pg_dumpall -c -U postgres' for $2 of $1 at $timestamp"

  docker exec -t $container_name pg_dumpall -c -U postgres | gzip > "$dumps_root/$app_name/dump-$container_name-$timestamp.sql.gz"
}

function docker-compose-stop-all() {
  echo "It will stop all following apps?"
  find /mnt/pools/fast/docker/compose-files/*/compose.yml | sed 's/.*compose-files\/\(.*\)\/compose.yml/- \1/'
  read -p "Continue? [Y/n] " -n 1 -r
  echo
  if [[ $REPLY =~ ^[Yy]$ ]]
  then
    find /mnt/pools/fast/docker/compose-files/*/compose.yml | xargs -I {} docker compose -f {} down
  fi
}

services:
  jellyfin:
    image: jellyfin/jellyfin:${APP_VERSION}
    container_name: 'jellyfin'
    hostname: 'jellyfin'
    user: '${APP_USER}:${APP_GROUP}'
    group_add:
      - '${SMB_GROUP}'
      - '109'
      - '44'
    environment:
      JELLYFIN_PublishedServerUrl: ${APP_HOST}
    env_file:
      - .env
    devices:
      - /dev/dri/renderD128:/dev/dri/renderD128
      - /dev/dri/card0:/dev/dri/card0
    volumes:
      - '${APP_DATA_PATH}/config:/config'
      - '${APP_DATA_PATH}/cache:/cache'
      - '${APP_DATA_PATH}/fonts:/usr/local/share/fonts/custom:ro' # Optional - extra fonts to be used during transcoding with subtitle burn-in
      - '${MEDIA_PATH}:/media'
    restart: unless-stopped
  rdtclient:
    image: rogerfar/rdtclient:${RDT_CLIENT_VERSION}
    container_name: 'rdtclient'
    hostname: 'rdtclient'
    user: '0' # linuxserver.io images requires root :(
    environment:
      - PUID=${APP_USER}
      - PGID=${APP_GROUP}
      - UMASK='415' # for '775'
      - TZ=${TIMEZONE}
    env_file:
      - .env
    volumes:
      - ${APP_DATA_PATH}/rdtclient:/data/db
      - ${MEDIA_PATH}:/data
    restart: unless-stopped
  ariang:
    image: hurlenko/aria2-ariang:${ARIA_NG_VERSION}
    container_name: 'ariang'
    hostname: 'ariang'
    user: '0' # root
    volumes:
      - ${APP_DATA_PATH}/aria2/config:/aria2/conf
      - ${MEDIA_PATH}/downloads:/aria2/data
    environment:
      - PUID=${APP_USER}
      - PGID=${APP_GROUP}
      - UMASK='415' # for '775'
      - ARIA2RPCPORT=443
    restart: always
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:${PROWLARR_VERSION}
    container_name: 'prowlarr'
    hostname: 'prowlarr'
    user: '${APP_USER}:${APP_GROUP}'
    environment:
      - PUID=${APP_USER}
      - PGID=${APP_GROUP}
      - TZ=${TIMEZONE}
      - UMASK='415' # for '775'
    env_file:
      - .env
    volumes:
      - ${APP_DATA_PATH}/prowlarr/config:/config
    restart: unless-stopped
  sonarr:
    image: lscr.io/linuxserver/sonarr:${SONARR_VERSION}
    container_name: 'sonarr'
    hostname: 'sonarr'
    user: '${APP_USER}:${APP_GROUP}'
    environment:
      - PUID=${APP_USER}
      - PGID=${APP_GROUP}
      - TZ=${TIMEZONE}
      - UMASK='415' # for '775'
    env_file:
      - .env
    volumes:
      - ${APP_DATA_PATH}/sonarr/config:/config
      - ${MEDIA_PATH}:/media
    restart: unless-stopped

networks:
  default:
    external: true
    name: nginxnetwork

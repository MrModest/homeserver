---
- name: Create a dir for compose files
  ansible.builtin.file:
    path: '{{ dcr_dirs.compose_root }}'
    state: directory
    mode: '{{ p_default_permissions.directory }}'
    owner: '{{ p_apps_user.user }}'
    group: '{{ p_apps_user.group }}'
    recurse: true
  become: true

- name: Install required packages
  ansible.builtin.apt:
    pkg:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg
      - software-properties-common
  become: true

- name: Create directory for Docker's GPG key
  ansible.builtin.file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'

- name: Add Docker's official GPG key
  ansible.builtin.apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    keyring: /etc/apt/keyrings/docker.gpg
    state: present
  become: true

- name: Print architecture variables
  ansible.builtin.debug:
    msg: "Architecture: {{ ansible_architecture }}, Codename: {{ ansible_lsb.codename }}"

- name: Add Docker repository
  ansible.builtin.apt_repository:
    repo: >-
      deb [arch={{ dcr_arch_mapping[ansible_architecture] | default(ansible_architecture) }}
      signed-by=/etc/apt/keyrings/docker.gpg]
      https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable
    filename: docker
    state: present
  become: true

- name: Install Docker and related packages
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
    update_cache: true
  loop:
    - docker-ce
    - docker-ce-cli
    - containerd.io
    - docker-buildx-plugin
    - docker-compose-plugin
  become: true

- name: Add Docker group
  ansible.builtin.group:
    name: docker
    state: present
  become: true

- name: Add user to Docker group
  ansible.builtin.user:
    name: "{{ dcr_docker_user.user }}"
    groups: docker
    append: true
  become: true

- name: Assure that 'docker-py' python module is absent
  ansible.builtin.pip:
    name: docker-py
    state: absent

- name: Install 'docker' python module
  ansible.builtin.pip:
    name: docker
    state: present

- name: Install 'docker-compose' python module
  ansible.builtin.pip:
    name: docker-compose

- name: Generate Docker daemon.json
  ansible.builtin.template:
    src: daemon.json.j2
    dest: /etc/docker/daemon.json
    mode: '{{ p_default_permissions.file }}'
    owner: root
    group: root
  become: true
  register: docker_config

- name: Restart dockerd
  ansible.builtin.systemd_service:
    name: docker
    state: restarted
  become: true

- name: Enable Docker services
  ansible.builtin.systemd_service:
    name: "{{ item }}"
    enabled: true
  become: true
  loop:
    - docker.service
    - containerd.service

- name: Install 'lazydocker' utility
  ansible.builtin.import_role:
    name: darkwizard242.lazydocker
  vars:
    lazydocker_version: '{{ dcr_lazydocker_version }}'
  tags:
    - lazydocker
